#include <iostream>
#include <cstdio>
#define FOR(i,a,b) for(i=a; i<=b; i++)
#define FOR2(i,n) FOR(i,0,n-1)
#define all(x) x.begin(),x.end()
#define MAXN 200
using namespace std;
char A[MAXN+5][MAXN+5][MAXN+5] = {
{""},
{""},
{""},
{""},
{""},
{"01023","02301","13002","30210","20130" },
{"123000","301020","000231","010302","032100","200013" },
{"1230000","3010020","0000231","0103002","0021300","0302100","2000013"},
{"12300000","30100020","00200031","00010302","00032100","01003200","03021000","20000013" },
{"123000000","300100020","002000031","001200300","010003002","000321000","000032100","030000210","200010003"},
{"1230000000","3001000020","0020000031","0102000300","0000013002","0000320100","0003201000","0010032000","0300000210","2000100003"}
};
int N;
void solve()
{
	int i,j,k;
	FOR(k,11,N)
	{
		A[k][0][0] = '1'; A[k][0][1] = '2'; A[k][0][2] = '3'; A[k][0][k-3] = '0'; A[k][0][k-2] = '0'; A[k][0][k-1] = '0';
		A[k][1][0] = '3'; A[k][1][1] = '0'; A[k][1][2] = '1'; A[k][1][k-3] = '0'; A[k][1][k-2] = '2'; A[k][1][k-1] = '0';
		A[k][2][0] = '0'; A[k][2][1] = '0'; A[k][2][2] = '0'; A[k][2][k-3] = '2'; A[k][2][k-2] = '3'; A[k][2][k-1] = '1';
		A[k][k-3][0] = '0'; A[k][k-3][1] = '1'; A[k][k-3][2] = '0'; A[k][k-3][k-3] = '3'; A[k][k-3][k-2] = '0'; A[k][k-3][k-1] = '2';
		A[k][k-2][0] = '0'; A[k][k-2][1] = '3'; A[k][k-2][2] = '2'; A[k][k-2][k-3] = '1'; A[k][k-2][k-2] = '0'; A[k][k-2][k-1] = '0';
		A[k][k-1][1] = '2'; A[k][k-1][1] = '0'; A[k][k-1][2] = '0'; A[k][k-1][k-3] = '0'; A[k][k-1][k-2] = '1'; A[k][k-1][k-1] = '3';
		FOR(i,3,k-3)
			FOR(j,3,k-3)
				A[k][i][j] = A[k-6][i-3][j-3];
	}
}
int main()
{
	int i,j;
	scanf("%d",&N);
	solve();
	FOR2(i,N)
		FOR2(j,N)
			printf("%c%c",(A[N][i][j]) ? A[N][i][j] : '0',(j != N - 1) ? ' ' : '\n');
	return 0;
}
